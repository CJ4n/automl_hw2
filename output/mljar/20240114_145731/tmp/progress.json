{
    "fit_level": "finished",
    "time_controller": {
        "total_time_limit": 7200,
        "model_time_limit": null,
        "steps": [
            "adjust_validation",
            "simple_algorithms",
            "default_algorithms",
            "not_so_random",
            "golden_features",
            "kmeans_features",
            "insert_random_feature",
            "features_selection",
            "hill_climbing_1",
            "hill_climbing_2",
            "boost_on_errors",
            "ensemble",
            "stack",
            "ensemble_stacked"
        ],
        "algorithms": [
            "Decision Tree",
            "Linear",
            "Random Forest",
            "Extra Trees",
            "LightGBM",
            "Xgboost",
            "CatBoost",
            "Neural Network",
            "Nearest Neighbors"
        ],
        "spend": [
            {
                "model_name": "prepare_data",
                "model_type": "prepare_data",
                "fit_level": "prepare_data",
                "train_time": 0.056998491287231445
            },
            {
                "model_name": "1_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "adjust_validation",
                "train_time": 4.443034648895264
            },
            {
                "model_name": "1_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 7.685531854629517
            },
            {
                "model_name": "2_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 7.437005281448364
            },
            {
                "model_name": "3_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 8.332005023956299
            },
            {
                "model_name": "4_Linear",
                "model_type": "Linear",
                "fit_level": "simple_algorithms",
                "train_time": 18.74868416786194
            },
            {
                "model_name": "5_Default_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "default_algorithms",
                "train_time": 30.436009407043457
            },
            {
                "model_name": "6_Default_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "default_algorithms",
                "train_time": 31.15643000602722
            },
            {
                "model_name": "7_Default_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "default_algorithms",
                "train_time": 18.160556316375732
            },
            {
                "model_name": "8_Default_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "default_algorithms",
                "train_time": 17.46400213241577
            },
            {
                "model_name": "9_Default_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "default_algorithms",
                "train_time": 24.33867621421814
            },
            {
                "model_name": "10_Default_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "default_algorithms",
                "train_time": 18.152100086212158
            },
            {
                "model_name": "11_Default_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "default_algorithms",
                "train_time": 8.933984994888306
            },
            {
                "model_name": "21_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 21.80310821533203
            },
            {
                "model_name": "12_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 26.644936084747314
            },
            {
                "model_name": "30_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 21.74446201324463
            },
            {
                "model_name": "39_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 24.763487339019775
            },
            {
                "model_name": "48_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 24.291744232177734
            },
            {
                "model_name": "57_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 17.90717053413391
            },
            {
                "model_name": "66_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 9.360340595245361
            },
            {
                "model_name": "22_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 26.751442432403564
            },
            {
                "model_name": "13_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 45.93170094490051
            },
            {
                "model_name": "31_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 20.323152780532837
            },
            {
                "model_name": "40_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 27.53710174560547
            },
            {
                "model_name": "49_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 27.71505832672119
            },
            {
                "model_name": "58_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 27.23919129371643
            },
            {
                "model_name": "67_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 12.144103288650513
            },
            {
                "model_name": "23_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 94.60217833518982
            },
            {
                "model_name": "14_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 35.05915641784668
            },
            {
                "model_name": "32_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 53.32762813568115
            },
            {
                "model_name": "41_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 26.376383543014526
            },
            {
                "model_name": "50_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 22.840826511383057
            },
            {
                "model_name": "59_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 19.80064845085144
            },
            {
                "model_name": "68_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 12.844290971755981
            },
            {
                "model_name": "24_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 34.91072630882263
            },
            {
                "model_name": "15_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 36.18493628501892
            },
            {
                "model_name": "33_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 18.81952166557312
            },
            {
                "model_name": "42_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 26.278361797332764
            },
            {
                "model_name": "51_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 24.94502592086792
            },
            {
                "model_name": "60_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 21.047549724578857
            },
            {
                "model_name": "69_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 13.569155931472778
            },
            {
                "model_name": "25_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 26.972826719284058
            },
            {
                "model_name": "16_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 36.363643646240234
            },
            {
                "model_name": "34_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 22.8055317401886
            },
            {
                "model_name": "43_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 25.038514614105225
            },
            {
                "model_name": "52_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 24.59757399559021
            },
            {
                "model_name": "61_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 21.045207262039185
            },
            {
                "model_name": "70_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 14.21299695968628
            },
            {
                "model_name": "26_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 31.075867891311646
            },
            {
                "model_name": "17_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 34.6284716129303
            },
            {
                "model_name": "35_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 23.198745250701904
            },
            {
                "model_name": "44_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 32.392444133758545
            },
            {
                "model_name": "53_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 26.248839378356934
            },
            {
                "model_name": "62_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 23.382164478302002
            },
            {
                "model_name": "71_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 14.87158727645874
            },
            {
                "model_name": "27_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 29.59001636505127
            },
            {
                "model_name": "18_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 36.84194564819336
            },
            {
                "model_name": "36_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 26.808614253997803
            },
            {
                "model_name": "45_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 34.958064556121826
            },
            {
                "model_name": "54_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 26.748014211654663
            },
            {
                "model_name": "63_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 22.126011610031128
            },
            {
                "model_name": "72_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 16.059666395187378
            },
            {
                "model_name": "28_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 36.94734787940979
            },
            {
                "model_name": "19_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 37.55998086929321
            },
            {
                "model_name": "37_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 35.53769373893738
            },
            {
                "model_name": "46_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 29.40088701248169
            },
            {
                "model_name": "55_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 28.73055934906006
            },
            {
                "model_name": "64_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 25.84848403930664
            },
            {
                "model_name": "29_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 31.968844175338745
            },
            {
                "model_name": "20_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 43.78261733055115
            },
            {
                "model_name": "38_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 24.49085760116577
            },
            {
                "model_name": "47_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 31.018688678741455
            },
            {
                "model_name": "56_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 36.30511116981506
            },
            {
                "model_name": "65_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 45.402629137039185
            },
            {
                "model_name": "36_CatBoost_GoldenFeatures",
                "model_type": "CatBoost",
                "fit_level": "golden_features",
                "train_time": 66.90348601341248
            },
            {
                "model_name": "37_CatBoost_GoldenFeatures",
                "model_type": "CatBoost",
                "fit_level": "golden_features",
                "train_time": 47.39075541496277
            },
            {
                "model_name": "29_LightGBM_GoldenFeatures",
                "model_type": "LightGBM",
                "fit_level": "golden_features",
                "train_time": 36.64330816268921
            },
            {
                "model_name": "36_CatBoost_KMeansFeatures",
                "model_type": "CatBoost",
                "fit_level": "kmeans_features",
                "train_time": 47.61505317687988
            },
            {
                "model_name": "37_CatBoost_KMeansFeatures",
                "model_type": "CatBoost",
                "fit_level": "kmeans_features",
                "train_time": 51.65990734100342
            },
            {
                "model_name": "29_LightGBM_KMeansFeatures",
                "model_type": "LightGBM",
                "fit_level": "kmeans_features",
                "train_time": 37.62312364578247
            },
            {
                "model_name": "36_CatBoost_RandomFeature",
                "model_type": "CatBoost",
                "fit_level": "insert_random_feature",
                "train_time": 35.694231271743774
            },
            {
                "model_name": "73_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 26.577231884002686
            },
            {
                "model_name": "74_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 39.1410608291626
            },
            {
                "model_name": "75_CatBoost_GoldenFeatures",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 28.781949758529663
            },
            {
                "model_name": "76_CatBoost_GoldenFeatures",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 48.30605435371399
            },
            {
                "model_name": "77_CatBoost_GoldenFeatures",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 36.18334126472473
            },
            {
                "model_name": "78_CatBoost_GoldenFeatures",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 69.8317756652832
            },
            {
                "model_name": "79_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 36.92461133003235
            },
            {
                "model_name": "80_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 36.211220264434814
            },
            {
                "model_name": "81_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 34.48696851730347
            },
            {
                "model_name": "82_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 36.43638634681702
            },
            {
                "model_name": "83_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 38.693782806396484
            },
            {
                "model_name": "84_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 46.90728831291199
            },
            {
                "model_name": "85_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "hill_climbing_1",
                "train_time": 21.33071279525757
            },
            {
                "model_name": "86_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "hill_climbing_1",
                "train_time": 21.199647665023804
            },
            {
                "model_name": "87_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "hill_climbing_1",
                "train_time": 21.5602023601532
            },
            {
                "model_name": "88_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 44.93321180343628
            },
            {
                "model_name": "89_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 39.559120893478394
            },
            {
                "model_name": "90_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 29.97573232650757
            },
            {
                "model_name": "91_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 30.16205930709839
            },
            {
                "model_name": "92_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 31.262252807617188
            },
            {
                "model_name": "93_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 45.037949085235596
            },
            {
                "model_name": "94_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 41.1978714466095
            },
            {
                "model_name": "95_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 31.82336950302124
            },
            {
                "model_name": "96_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 39.12255549430847
            },
            {
                "model_name": "97_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 41.654807567596436
            },
            {
                "model_name": "98_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 36.15512037277222
            },
            {
                "model_name": "99_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 44.16545271873474
            },
            {
                "model_name": "100_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 44.2473406791687
            },
            {
                "model_name": "101_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 35.5932514667511
            },
            {
                "model_name": "102_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 38.068459033966064
            },
            {
                "model_name": "103_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 40.01672387123108
            },
            {
                "model_name": "104_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 41.08285927772522
            },
            {
                "model_name": "105_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 37.3059344291687
            },
            {
                "model_name": "106_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 37.98467707633972
            },
            {
                "model_name": "107_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 42.759424448013306
            },
            {
                "model_name": "108_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 42.77707099914551
            },
            {
                "model_name": "109_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 36.71791386604309
            },
            {
                "model_name": "110_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 38.337859869003296
            },
            {
                "model_name": "111_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "hill_climbing_1",
                "train_time": 25.13233184814453
            },
            {
                "model_name": "112_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 57.68661022186279
            },
            {
                "model_name": "113_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 43.57997941970825
            },
            {
                "model_name": "114_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 41.69586777687073
            },
            {
                "model_name": "115_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 37.19325065612793
            },
            {
                "model_name": "116_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 46.437052726745605
            },
            {
                "model_name": "117_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_2",
                "train_time": 45.88963079452515
            },
            {
                "model_name": "118_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_2",
                "train_time": 43.45534110069275
            },
            {
                "model_name": "119_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_2",
                "train_time": 48.95682978630066
            },
            {
                "model_name": "120_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_2",
                "train_time": 46.32252287864685
            },
            {
                "model_name": "121_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_2",
                "train_time": 44.66904401779175
            },
            {
                "model_name": "122_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_2",
                "train_time": 46.608224868774414
            },
            {
                "model_name": "123_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_2",
                "train_time": 39.08575797080994
            },
            {
                "model_name": "124_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_2",
                "train_time": 47.60866975784302
            },
            {
                "model_name": "125_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_2",
                "train_time": 41.854572772979736
            },
            {
                "model_name": "126_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_2",
                "train_time": 48.912078619003296
            },
            {
                "model_name": "112_CatBoost_BoostOnErrors",
                "model_type": "CatBoost",
                "fit_level": "boost_on_errors",
                "train_time": 63.21017932891846
            },
            {
                "model_name": "Ensemble",
                "model_type": "Ensemble",
                "fit_level": "ensemble",
                "train_time": 72.88384342193604
            },
            {
                "model_name": "112_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 126.68358635902405
            },
            {
                "model_name": "29_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 38.237284660339355
            },
            {
                "model_name": "120_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 44.28721904754639
            },
            {
                "model_name": "91_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 34.57206392288208
            },
            {
                "model_name": "123_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 39.139479637145996
            },
            {
                "model_name": "100_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 80.57409071922302
            },
            {
                "model_name": "78_CatBoost_GoldenFeatures_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 127.45717024803162
            },
            {
                "model_name": "26_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 41.68865895271301
            },
            {
                "model_name": "19_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 47.48219537734985
            },
            {
                "model_name": "8_Default_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 39.54006338119507
            },
            {
                "model_name": "102_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 41.861653566360474
            },
            {
                "model_name": "45_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 70.1271185874939
            },
            {
                "model_name": "36_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 59.31952118873596
            },
            {
                "model_name": "80_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 49.077451944351196
            },
            {
                "model_name": "88_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 45.36242723464966
            },
            {
                "model_name": "92_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 36.88906764984131
            },
            {
                "model_name": "48_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 41.25632095336914
            },
            {
                "model_name": "124_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 85.43614029884338
            },
            {
                "model_name": "74_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 87.76296710968018
            },
            {
                "model_name": "81_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 37.50576639175415
            },
            {
                "model_name": "89_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 42.439486503601074
            },
            {
                "model_name": "96_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 40.173579454422
            },
            {
                "model_name": "101_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 45.20288920402527
            },
            {
                "model_name": "99_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 73.92977809906006
            },
            {
                "model_name": "36_CatBoost_GoldenFeatures_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 62.74243688583374
            },
            {
                "model_name": "24_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 51.842278718948364
            },
            {
                "model_name": "122_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 48.21861553192139
            },
            {
                "model_name": "59_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 39.406749963760376
            },
            {
                "model_name": "125_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 43.52229881286621
            },
            {
                "model_name": "103_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 73.11102104187012
            },
            {
                "model_name": "37_CatBoost_GoldenFeatures_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 101.82232522964478
            },
            {
                "model_name": "28_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 60.554078102111816
            },
            {
                "model_name": "119_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 55.160364627838135
            },
            {
                "model_name": "62_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 47.61952185630798
            },
            {
                "model_name": "106_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 49.273470640182495
            },
            {
                "model_name": "39_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 80.9332365989685
            },
            {
                "model_name": "37_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 87.3485004901886
            },
            {
                "model_name": "95_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 45.0244140625
            },
            {
                "model_name": "Ensemble_Stacked",
                "model_type": "Ensemble",
                "fit_level": "ensemble_stacked",
                "train_time": 123.17305517196655
            }
        ],
        "is_hill_climbing": true,
        "is_stacking": true
    },
    "all_params": {
        "adjust_validation": [
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "1_DecisionTree",
                "status": "trained",
                "final_loss": -0.7027027027027027,
                "train_time": 6.060202598571777,
                "data_type": "original",
                "max_time_for_learner": 720.0
            }
        ],
        "simple_algorithms": [
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "1_DecisionTree",
                "status": "trained",
                "final_loss": -0.7490347490347491,
                "train_time": 9.60952877998352,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_depth": 2,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "2_DecisionTree",
                "status": "trained",
                "final_loss": -0.6516203703703703,
                "train_time": 9.276926279067993,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_depth": 2,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "3_DecisionTree",
                "status": "trained",
                "final_loss": -0.6407407407407407,
                "train_time": 10.081613779067993,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Linear",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "4_Linear",
                "status": "trained",
                "final_loss": -0.6024844720496895,
                "train_time": 20.63768243789673,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "default_algorithms": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "5_Default_LightGBM",
                "status": "trained",
                "final_loss": -0.8828606658446363,
                "train_time": 32.63600564002991,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "6_Default_Xgboost",
                "status": "trained",
                "final_loss": -0.8623052959501557,
                "train_time": 33.56343102455139,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.1,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "7_Default_CatBoost",
                "status": "trained",
                "final_loss": -0.8841843088418431,
                "train_time": 20.352558135986328,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "8_Default_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8648310387984982,
                "train_time": 19.456986665725708,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 9,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "9_Default_RandomForest",
                "status": "trained",
                "final_loss": -0.8236017209588199,
                "train_time": 26.532788038253784,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 10,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "10_Default_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7692307692307692,
                "train_time": 20.202115058898926,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "n_neighbors": 5,
                    "weights": "uniform",
                    "seed": 11,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "11_Default_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8714107365792759,
                "train_time": 10.55698537826538,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "not_so_random": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 50,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "21_LightGBM",
                "status": "trained",
                "final_loss": -0.8824257425742575,
                "train_time": 23.970112085342407,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 7,
                    "min_child_weight": 5,
                    "subsample": 1.0,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "12_Xgboost",
                "status": "trained",
                "final_loss": -0.860377358490566,
                "train_time": 28.70293664932251,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "30_CatBoost",
                "status": "trained",
                "final_loss": -0.8913857677902621,
                "train_time": 23.83199191093445,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "39_RandomForest",
                "status": "trained",
                "final_loss": -0.8488228004956628,
                "train_time": 26.746376991271973,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "48_ExtraTrees",
                "status": "trained",
                "final_loss": -0.85625,
                "train_time": 26.16285467147827,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.1,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "57_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8259551243177683,
                "train_time": 20.171255588531494,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "n_neighbors": 7,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "66_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.880597014925373,
                "train_time": 11.003867864608765,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "objective": "binary",
                    "num_leaves": 15,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "22_LightGBM",
                "status": "trained",
                "final_loss": -0.8749999999999999,
                "train_time": 28.963435411453247,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 6,
                    "min_child_weight": 25,
                    "subsample": 0.5,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "13_Xgboost",
                "status": "trained",
                "final_loss": -0.7916666666666666,
                "train_time": 47.84570288658142,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "31_CatBoost",
                "status": "trained",
                "final_loss": -0.8863920099875157,
                "train_time": 22.4171359539032,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "40_RandomForest",
                "status": "trained",
                "final_loss": -0.7383685800604228,
                "train_time": 29.507530450820923,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "49_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7210884353741497,
                "train_time": 30.73259472846985,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "dense_1_size": 64,
                    "dense_2_size": 4,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "58_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.7900207900207901,
                "train_time": 29.21019220352173,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "67_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8829389788293898,
                "train_time": 14.294179439544678,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 20,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "23_LightGBM",
                "status": "trained",
                "final_loss": -0.8763906056860322,
                "train_time": 97.59170985221863,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 9,
                    "min_child_weight": 10,
                    "subsample": 0.8,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "14_Xgboost",
                "status": "trained",
                "final_loss": -0.8479495268138802,
                "train_time": 36.94818472862244,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "learning_rate": 0.025,
                    "depth": 9,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "32_CatBoost",
                "status": "trained",
                "final_loss": -0.8862647607209446,
                "train_time": 55.54463267326355,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_features": 1.0,
                    "min_samples_split": 30,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "41_RandomForest",
                "status": "trained",
                "final_loss": -0.7405102675793404,
                "train_time": 28.664932012557983,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_features": 1.0,
                    "min_samples_split": 30,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "50_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7327690447400242,
                "train_time": 24.809105157852173,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "59_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8630914826498421,
                "train_time": 21.47765350341797,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "68_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8829389788293898,
                "train_time": 14.595815896987915,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "24_LightGBM",
                "status": "trained",
                "final_loss": -0.8876474239602732,
                "train_time": 36.91367316246033,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 4,
                    "min_child_weight": 10,
                    "subsample": 0.6,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "15_Xgboost",
                "status": "trained",
                "final_loss": -0.8315591734502192,
                "train_time": 38.07790231704712,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "learning_rate": 0.1,
                    "depth": 4,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "33_CatBoost",
                "status": "trained",
                "final_loss": -0.8591194968553458,
                "train_time": 20.789522886276245,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "42_RandomForest",
                "status": "trained",
                "final_loss": -0.8145859085290482,
                "train_time": 28.37836241722107,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "51_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7724477244772447,
                "train_time": 27.007028341293335,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "dense_1_size": 16,
                    "dense_2_size": 8,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "60_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8461538461538463,
                "train_time": 22.940697193145752,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "69_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8829389788293898,
                "train_time": 15.231155157089233,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 30,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "25_LightGBM",
                "status": "trained",
                "final_loss": -0.8832298136645962,
                "train_time": 29.107826709747314,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 50,
                    "subsample": 0.5,
                    "colsample_bytree": 0.7,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "16_Xgboost",
                "status": "trained",
                "final_loss": -0.644638403990025,
                "train_time": 38.48164248466492,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "learning_rate": 0.025,
                    "depth": 6,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "34_CatBoost",
                "status": "trained",
                "final_loss": -0.8753874767513948,
                "train_time": 24.769531965255737,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "criterion": "gini",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "43_RandomForest",
                "status": "trained",
                "final_loss": -0.7422934648581998,
                "train_time": 26.968295574188232,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "criterion": "gini",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "52_ExtraTrees",
                "status": "trained",
                "final_loss": -0.70625,
                "train_time": 26.556572914123535,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "61_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8562653562653563,
                "train_time": 22.86220645904541,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "n_neighbors": 7,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "70_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.880597014925373,
                "train_time": 15.9369957447052,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "26_LightGBM",
                "status": "trained",
                "final_loss": -0.8901234567901234,
                "train_time": 33.044302225112915,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "17_Xgboost",
                "status": "trained",
                "final_loss": -0.8442211055276382,
                "train_time": 36.52849197387695,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "learning_rate": 0.1,
                    "depth": 5,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "35_CatBoost",
                "status": "trained",
                "final_loss": -0.8833746898263027,
                "train_time": 25.2057363986969,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "44_RandomForest",
                "status": "trained",
                "final_loss": -0.8364741641337385,
                "train_time": 34.404444217681885,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "53_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8264669163545567,
                "train_time": 28.240781545639038,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "62_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.861631419939577,
                "train_time": 25.131160259246826,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "71_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8829389788293898,
                "train_time": 16.434587478637695,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "objective": "binary",
                    "num_leaves": 127,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 1.0,
                    "min_data_in_leaf": 50,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "27_LightGBM",
                "status": "trained",
                "final_loss": -0.8757763975155279,
                "train_time": 31.5470187664032,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 7,
                    "min_child_weight": 25,
                    "subsample": 0.6,
                    "colsample_bytree": 1.0,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "18_Xgboost",
                "status": "trained",
                "final_loss": -0.7921667719519899,
                "train_time": 38.80794286727905,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost",
                "status": "trained",
                "final_loss": -0.897324206596142,
                "train_time": 28.94861149787903,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "45_RandomForest",
                "status": "trained",
                "final_loss": -0.856788592684439,
                "train_time": 36.96307325363159,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "54_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8468691878487291,
                "train_time": 28.724968910217285,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "63_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8544891640866873,
                "train_time": 23.956024885177612,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "n_neighbors": 3,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "72_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8822429906542056,
                "train_time": 17.696664810180664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "28_LightGBM",
                "status": "trained",
                "final_loss": -0.886687306501548,
                "train_time": 38.93388366699219,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "19_Xgboost",
                "status": "trained",
                "final_loss": -0.8785046728971964,
                "train_time": 39.69598197937012,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost",
                "status": "trained",
                "final_loss": -0.893167701863354,
                "train_time": 37.4956910610199,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "46_RandomForest",
                "status": "trained",
                "final_loss": -0.7421922841396204,
                "train_time": 31.399128913879395,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "55_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7152647975077883,
                "train_time": 30.63761067390442,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "64_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8573208722741432,
                "train_time": 27.556373834609985,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM",
                "status": "trained",
                "final_loss": -0.8917748917748917,
                "train_time": 33.95842385292053,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 10,
                    "subsample": 0.6,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "20_Xgboost",
                "status": "trained",
                "final_loss": -0.8353162179085786,
                "train_time": 45.734618186950684,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "learning_rate": 0.025,
                    "depth": 6,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "38_CatBoost",
                "status": "trained",
                "final_loss": -0.8773234200743495,
                "train_time": 26.37488555908203,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "47_RandomForest",
                "status": "trained",
                "final_loss": -0.8145454545454546,
                "train_time": 33.13366365432739,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "56_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7412587412587412,
                "train_time": 39.90310454368591,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "65_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8443367655966082,
                "train_time": 49.21263027191162,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "golden_features": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.895131086142322,
                "train_time": 68.9974856376648,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.893854748603352,
                "train_time": 49.64873147010803,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.8829054477144646,
                "train_time": 38.88430833816528,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            }
        ],
        "kmeans_features": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost_KMeansFeatures",
                "status": "trained",
                "final_loss": -0.8916562889165629,
                "train_time": 51.640052795410156,
                "data_type": "original_kmeans_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost_KMeansFeatures",
                "status": "trained",
                "final_loss": -0.8894379246448425,
                "train_time": 53.83243799209595,
                "data_type": "original_kmeans_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM_KMeansFeatures",
                "status": "trained",
                "final_loss": -0.8840399002493765,
                "train_time": 39.94811391830444,
                "data_type": "original_kmeans_features",
                "max_time_for_learner": 72.0
            }
        ],
        "insert_random_feature": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "add_random_feature": true
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 1
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 1,
                "name": "36_CatBoost_RandomFeature",
                "status": "trained",
                "final_loss": -0.8992537313432836,
                "train_time": 38.72376585006714,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "hill_climbing_1": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "73_CatBoost",
                "status": "trained",
                "final_loss": -0.8890274314214464,
                "train_time": 28.59815287590027,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "74_CatBoost",
                "status": "trained",
                "final_loss": -0.8970223325062036,
                "train_time": 41.117064476013184,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "75_CatBoost_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.8904109589041096,
                "train_time": 30.767951250076294,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "76_CatBoost_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.8859649122807017,
                "train_time": 50.29412603378296,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "77_CatBoost_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.8917910447761194,
                "train_time": 38.50228667259216,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "78_CatBoost_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.8989460632362057,
                "train_time": 71.79982900619507,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "79_LightGBM",
                "status": "trained",
                "final_loss": -0.8857142857142857,
                "train_time": 38.898706674575806,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "80_LightGBM",
                "status": "trained",
                "final_loss": -0.8895743368291179,
                "train_time": 38.20425367355347,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "81_LightGBM",
                "status": "trained",
                "final_loss": -0.8879310344827586,
                "train_time": 36.40196871757507,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "82_LightGBM",
                "status": "trained",
                "final_loss": -0.8853267570900124,
                "train_time": 38.383671045303345,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "83_LightGBM",
                "status": "trained",
                "final_loss": -0.879950495049505,
                "train_time": 40.890785694122314,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary",
                    "num_leaves": 127,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "84_LightGBM",
                "status": "trained",
                "final_loss": -0.8821339950372208,
                "train_time": 48.90329027175903,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 5,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "85_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.87375,
                "train_time": 23.062730312347412,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 5,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "86_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.87375,
                "train_time": 22.73855447769165,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "n_neighbors": 5,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "87_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.87375,
                "train_time": 23.17820453643799,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "88_Xgboost",
                "status": "trained",
                "final_loss": -0.8783530879600748,
                "train_time": 46.82421612739563,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "89_Xgboost",
                "status": "trained",
                "final_loss": -0.8739811912225706,
                "train_time": 41.53104281425476,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 8,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "90_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8475648323845668,
                "train_time": 31.78567147254944,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "91_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8756281407035177,
                "train_time": 31.900007009506226,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "92_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8644597126795752,
                "train_time": 33.15424966812134,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "93_Xgboost",
                "status": "trained",
                "final_loss": -0.8492307692307692,
                "train_time": 46.95478558540344,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "94_Xgboost",
                "status": "trained",
                "final_loss": -0.8596381784154709,
                "train_time": 43.12384557723999,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 8,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "95_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8605230386052304,
                "train_time": 33.511367321014404,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "96_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8634361233480177,
                "train_time": 40.81950855255127,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 7,
                    "min_child_weight": 5,
                    "subsample": 1.0,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "97_Xgboost",
                "status": "trained",
                "final_loss": -0.8515967438948028,
                "train_time": 43.58180093765259,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 7,
                    "min_child_weight": 5,
                    "subsample": 1.0,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "98_Xgboost",
                "status": "trained",
                "final_loss": -0.8598247809762203,
                "train_time": 38.939026832580566,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "99_RandomForest",
                "status": "trained",
                "final_loss": -0.8504034761018,
                "train_time": 46.09962821006775,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "100_RandomForest",
                "status": "trained",
                "final_loss": -0.8589185829707894,
                "train_time": 46.19578576087952,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "101_ExtraTrees",
                "status": "trained",
                "final_loss": -0.851782363977486,
                "train_time": 37.547144412994385,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "102_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8594427244582044,
                "train_time": 40.03146147727966,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "103_RandomForest",
                "status": "trained",
                "final_loss": -0.8493827160493826,
                "train_time": 41.89301586151123,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "104_RandomForest",
                "status": "trained",
                "final_loss": -0.847394540942928,
                "train_time": 42.9358594417572,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "105_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8366583541147132,
                "train_time": 39.2658212184906,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "106_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8483709273182957,
                "train_time": 39.93174624443054,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "107_RandomForest",
                "status": "trained",
                "final_loss": -0.8428134556574923,
                "train_time": 44.725977420806885,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "108_RandomForest",
                "status": "trained",
                "final_loss": -0.8361858190709046,
                "train_time": 44.77000904083252,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "109_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8173258003766477,
                "train_time": 38.73491382598877,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "110_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8299319727891157,
                "train_time": 40.37080001831055,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "gini",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "111_DecisionTree",
                "status": "trained",
                "final_loss": -0.7378252168112076,
                "train_time": 26.773959636688232,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "hill_climbing_2": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "112_CatBoost",
                "status": "trained",
                "final_loss": -0.8991282689912827,
                "train_time": 59.689319372177124,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "113_LightGBM",
                "status": "trained",
                "final_loss": -0.8814814814814815,
                "train_time": 45.60697960853577,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "114_LightGBM",
                "status": "trained",
                "final_loss": -0.8791615289765722,
                "train_time": 43.68586492538452,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "115_LightGBM",
                "status": "trained",
                "final_loss": -0.8843283582089553,
                "train_time": 39.17325234413147,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "116_LightGBM",
                "status": "trained",
                "final_loss": -0.886687306501548,
                "train_time": 48.367111682891846,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 7,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "117_Xgboost",
                "status": "trained",
                "final_loss": -0.8703241895261846,
                "train_time": 47.88558030128479,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 9,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "118_Xgboost",
                "status": "trained",
                "final_loss": -0.8694565896314802,
                "train_time": 45.33026480674744,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 7,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "119_Xgboost",
                "status": "trained",
                "final_loss": -0.8704856787048568,
                "train_time": 50.91339063644409,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 9,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "120_Xgboost",
                "status": "trained",
                "final_loss": -0.8816936488169365,
                "train_time": 48.2345232963562,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 7,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "121_Xgboost",
                "status": "trained",
                "final_loss": -0.8660826032540675,
                "train_time": 46.644044160842896,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 9,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "122_Xgboost",
                "status": "trained",
                "final_loss": -0.8733459357277882,
                "train_time": 48.492178440093994,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "123_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8594427244582044,
                "train_time": 41.04175877571106,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "124_RandomForest",
                "status": "trained",
                "final_loss": -0.852195423623995,
                "train_time": 49.57767343521118,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.6,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "125_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8505603985056039,
                "train_time": 43.74156951904297,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.6,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "126_RandomForest",
                "status": "trained",
                "final_loss": -0.8481481481481481,
                "train_time": 50.92708158493042,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "boost_on_errors": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10,
                    "sample_weight_path": "output\\mljar\\20240114_145731\\tmp\\112_CatBoost_sample_weight.data"
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "112_CatBoost_BoostOnErrors",
                "status": "trained",
                "final_loss": -0.9022277227722773,
                "train_time": 65.18472862243652,
                "data_type": "boost_on_error",
                "max_time_for_learner": 72.0,
                "injected_sample_weight": true
            }
        ],
        "ensemble": [
            {
                "model_type": "ensemble",
                "is_stacked": false,
                "name": "Ensemble",
                "status": "trained",
                "final_loss": -0.9029066171923315,
                "train_time": 72.88384342193604
            }
        ],
        "stack": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "112_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.9066171923314781,
                "train_time": 128.53773283958435,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9135034225264469,
                "train_time": 40.05208921432495,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 9,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "120_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9105490438001234,
                "train_time": 46.051265478134155,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "91_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8905289052890529,
                "train_time": 36.253820180892944,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "123_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9182156133828997,
                "train_time": 40.89087533950806,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "100_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.9154228855721394,
                "train_time": 82.57394742965698,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "78_CatBoost_GoldenFeatures_Stacked",
                "status": "trained",
                "final_loss": -0.9152752009894868,
                "train_time": 129.4883246421814,
                "data_type": "original_golden_features_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "26_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9143920595533499,
                "train_time": 43.80387043952942,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "19_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9066171923314781,
                "train_time": 49.499236822128296,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "8_Default_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8875379939209725,
                "train_time": 41.080185890197754,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "102_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9110012360939431,
                "train_time": 43.697537422180176,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "45_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.9174425822470514,
                "train_time": 72.04411935806274,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.9142857142857141,
                "train_time": 61.272870779037476,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "80_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9166666666666667,
                "train_time": 51.04439330101013,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "88_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9113453192808431,
                "train_time": 47.24804472923279,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "92_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8884735202492211,
                "train_time": 38.83304047584534,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "48_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9125852448853069,
                "train_time": 43.15897035598755,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "124_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.917910447761194,
                "train_time": 87.42175602912903,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "74_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.919454770755886,
                "train_time": 89.6832709312439,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "81_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9164086687306502,
                "train_time": 39.37084913253784,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "89_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9054972205064855,
                "train_time": 44.223047733306885,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "96_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8903775883069428,
                "train_time": 42.27364993095398,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "101_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9164588528678305,
                "train_time": 47.0546452999115,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "99_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.9162011173184358,
                "train_time": 75.84961223602295,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost_GoldenFeatures_Stacked",
                "status": "trained",
                "final_loss": -0.9116915422885571,
                "train_time": 64.69231295585632,
                "data_type": "original_golden_features_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "24_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9152119700748129,
                "train_time": 53.97747039794922,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 9,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "122_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9137181874612043,
                "train_time": 50.1056489944458,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "59_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.892988929889299,
                "train_time": 41.01756477355957,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.6,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "125_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9118012422360249,
                "train_time": 45.338852643966675,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "103_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.9146039603960395,
                "train_time": 75.17951703071594,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost_GoldenFeatures_Stacked",
                "status": "trained",
                "final_loss": -0.9156327543424319,
                "train_time": 103.94132709503174,
                "data_type": "original_golden_features_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "28_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.91495965238982,
                "train_time": 62.69507336616516,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 7,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "119_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9126934984520124,
                "train_time": 57.14636516571045,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "62_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8805878750765462,
                "train_time": 49.411519289016724,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "106_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9162011173184358,
                "train_time": 51.311413526535034,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "39_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.9140722291407223,
                "train_time": 82.96368789672852,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.9177489177489178,
                "train_time": 89.402498960495,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "116_LightGBM_Stacked",
                "status": "error",
                "final_loss": null,
                "train_time": null,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 7,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "117_Xgboost_Stacked",
                "status": "error",
                "final_loss": null,
                "train_time": null,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 8,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "95_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "54_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.6,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "126_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "77_CatBoost_GoldenFeatures_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_golden_features_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "79_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 9,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "118_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "64_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "105_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "104_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240114_145731\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost_KMeansFeatures_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_kmeans_features_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "82_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 7,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "121_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "61_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "110_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "107_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "115_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "6_Default_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "63_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "53_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "44_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.8858895705521472,
                "train_time": 46.76941418647766,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            }
        ],
        "ensemble_stacked": [
            {
                "model_type": "ensemble",
                "is_stacked": true,
                "name": "Ensemble_Stacked",
                "status": "trained",
                "final_loss": -0.919454770755886,
                "train_time": 123.17305517196655
            }
        ]
    },
    "adjust_validation": false
}