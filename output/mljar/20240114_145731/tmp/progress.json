{
    "fit_level": "not_so_random",
    "time_controller": {
        "total_time_limit": 7200,
        "model_time_limit": null,
        "steps": [
            "adjust_validation",
            "simple_algorithms",
            "default_algorithms",
            "not_so_random",
            "golden_features",
            "kmeans_features",
            "insert_random_feature",
            "features_selection",
            "hill_climbing_1",
            "hill_climbing_2",
            "boost_on_errors",
            "ensemble",
            "stack",
            "ensemble_stacked"
        ],
        "algorithms": [
            "Decision Tree",
            "Linear",
            "Random Forest",
            "Extra Trees",
            "LightGBM",
            "Xgboost",
            "CatBoost",
            "Neural Network",
            "Nearest Neighbors"
        ],
        "spend": [
            {
                "model_name": "prepare_data",
                "model_type": "prepare_data",
                "fit_level": "prepare_data",
                "train_time": 0.056998491287231445
            },
            {
                "model_name": "1_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "adjust_validation",
                "train_time": 4.443034648895264
            },
            {
                "model_name": "1_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 7.685531854629517
            },
            {
                "model_name": "2_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 7.437005281448364
            },
            {
                "model_name": "3_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 8.332005023956299
            },
            {
                "model_name": "4_Linear",
                "model_type": "Linear",
                "fit_level": "simple_algorithms",
                "train_time": 18.74868416786194
            },
            {
                "model_name": "5_Default_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "default_algorithms",
                "train_time": 30.436009407043457
            },
            {
                "model_name": "6_Default_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "default_algorithms",
                "train_time": 31.15643000602722
            },
            {
                "model_name": "7_Default_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "default_algorithms",
                "train_time": 18.160556316375732
            },
            {
                "model_name": "8_Default_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "default_algorithms",
                "train_time": 17.46400213241577
            },
            {
                "model_name": "9_Default_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "default_algorithms",
                "train_time": 24.33867621421814
            },
            {
                "model_name": "10_Default_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "default_algorithms",
                "train_time": 18.152100086212158
            },
            {
                "model_name": "11_Default_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "default_algorithms",
                "train_time": 8.933984994888306
            },
            {
                "model_name": "21_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 21.80310821533203
            },
            {
                "model_name": "12_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 26.644936084747314
            },
            {
                "model_name": "30_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 21.74446201324463
            },
            {
                "model_name": "39_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 24.763487339019775
            },
            {
                "model_name": "48_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 24.291744232177734
            },
            {
                "model_name": "57_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 17.90717053413391
            },
            {
                "model_name": "66_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 9.360340595245361
            },
            {
                "model_name": "22_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 26.751442432403564
            },
            {
                "model_name": "13_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 45.93170094490051
            },
            {
                "model_name": "31_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 20.323152780532837
            },
            {
                "model_name": "40_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 27.53710174560547
            }
        ],
        "is_hill_climbing": true,
        "is_stacking": true
    },
    "all_params": {
        "adjust_validation": [
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "1_DecisionTree",
                "status": "trained",
                "final_loss": -0.7027027027027027,
                "train_time": 6.060202598571777,
                "data_type": "original",
                "max_time_for_learner": 720.0
            }
        ],
        "simple_algorithms": [
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "1_DecisionTree",
                "status": "trained",
                "final_loss": -0.7490347490347491,
                "train_time": 9.60952877998352,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_depth": 2,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "2_DecisionTree",
                "status": "trained",
                "final_loss": -0.6516203703703703,
                "train_time": 9.276926279067993,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_depth": 2,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "3_DecisionTree",
                "status": "trained",
                "final_loss": -0.6407407407407407,
                "train_time": 10.081613779067993,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Linear",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "4_Linear",
                "status": "trained",
                "final_loss": -0.6024844720496895,
                "train_time": 20.63768243789673,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "default_algorithms": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "5_Default_LightGBM",
                "status": "trained",
                "final_loss": -0.8828606658446363,
                "train_time": 32.63600564002991,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "6_Default_Xgboost",
                "status": "trained",
                "final_loss": -0.8623052959501557,
                "train_time": 33.56343102455139,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.1,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "7_Default_CatBoost",
                "status": "trained",
                "final_loss": -0.8841843088418431,
                "train_time": 20.352558135986328,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "8_Default_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8648310387984982,
                "train_time": 19.456986665725708,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 9,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "9_Default_RandomForest",
                "status": "trained",
                "final_loss": -0.8236017209588199,
                "train_time": 26.532788038253784,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 10,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "10_Default_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7692307692307692,
                "train_time": 20.202115058898926,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "n_neighbors": 5,
                    "weights": "uniform",
                    "seed": 11,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "11_Default_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8714107365792759,
                "train_time": 10.55698537826538,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "not_so_random": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 50,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "21_LightGBM",
                "status": "trained",
                "final_loss": -0.8824257425742575,
                "train_time": 23.970112085342407,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 7,
                    "min_child_weight": 5,
                    "subsample": 1.0,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "12_Xgboost",
                "status": "trained",
                "final_loss": -0.860377358490566,
                "train_time": 28.70293664932251,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "30_CatBoost",
                "status": "trained",
                "final_loss": -0.8913857677902621,
                "train_time": 23.83199191093445,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "39_RandomForest",
                "status": "trained",
                "final_loss": -0.8488228004956628,
                "train_time": 26.746376991271973,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "48_ExtraTrees",
                "status": "trained",
                "final_loss": -0.85625,
                "train_time": 26.16285467147827,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.1,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "57_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8259551243177683,
                "train_time": 20.171255588531494,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "n_neighbors": 7,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "66_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.880597014925373,
                "train_time": 11.003867864608765,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "objective": "binary",
                    "num_leaves": 15,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "22_LightGBM",
                "status": "trained",
                "final_loss": -0.8749999999999999,
                "train_time": 28.963435411453247,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 6,
                    "min_child_weight": 25,
                    "subsample": 0.5,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "13_Xgboost",
                "status": "trained",
                "final_loss": -0.7916666666666666,
                "train_time": 47.84570288658142,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "31_CatBoost",
                "status": "trained",
                "final_loss": -0.8863920099875157,
                "train_time": 22.4171359539032,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "40_RandomForest",
                "status": "trained",
                "final_loss": -0.7383685800604228,
                "train_time": 29.507530450820923,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "49_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "dense_1_size": 64,
                    "dense_2_size": 4,
                    "learning_rate": 0.05
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "58_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 3,
                    "weights": "distance"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "67_NearestNeighbors",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 20,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "23_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 9,
                    "min_child_weight": 10,
                    "subsample": 0.8,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "14_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "learning_rate": 0.025,
                    "depth": 9,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "32_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_features": 1.0,
                    "min_samples_split": 30,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "41_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_features": 1.0,
                    "min_samples_split": 30,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "50_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.01
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "59_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 3,
                    "weights": "distance"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "68_NearestNeighbors",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "24_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 4,
                    "min_child_weight": 10,
                    "subsample": 0.6,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "15_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "learning_rate": 0.1,
                    "depth": 4,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "33_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "42_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "51_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "dense_1_size": 16,
                    "dense_2_size": 8,
                    "learning_rate": 0.01
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "60_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 3,
                    "weights": "distance"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "69_NearestNeighbors",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 30,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "25_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 50,
                    "subsample": 0.5,
                    "colsample_bytree": 0.7,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "16_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "learning_rate": 0.025,
                    "depth": 6,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "34_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "criterion": "gini",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "43_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "criterion": "gini",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "52_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "61_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "n_neighbors": 7,
                    "weights": "uniform"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "70_NearestNeighbors",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "26_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "17_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "learning_rate": 0.1,
                    "depth": 5,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "35_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "44_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "53_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 16,
                    "learning_rate": 0.05
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "62_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "n_neighbors": 3,
                    "weights": "distance"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "71_NearestNeighbors",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "objective": "binary",
                    "num_leaves": 127,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 1.0,
                    "min_data_in_leaf": 50,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "27_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 7,
                    "min_child_weight": 25,
                    "subsample": 0.6,
                    "colsample_bytree": 1.0,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "18_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "45_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "54_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.05
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "63_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "n_neighbors": 3,
                    "weights": "uniform"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "72_NearestNeighbors",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "28_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "19_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "46_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 3,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "55_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.05
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "64_NeuralNetwork",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 10,
                    "subsample": 0.6,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "20_Xgboost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "learning_rate": 0.025,
                    "depth": 6,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "38_CatBoost",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "47_RandomForest",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240114_145731\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240114_145731\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240114_145731\\tmp",
                    "k_folds": 10
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "eval_metric_name": "f1"
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "56_ExtraTrees",
                "status": "initialized",
                "final_loss": null,
                "train_time": null,
                "data_type": "original"
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240