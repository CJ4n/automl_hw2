{
    "fit_level": "finished",
    "time_controller": {
        "total_time_limit": 3600,
        "model_time_limit": null,
        "steps": [
            "adjust_validation",
            "simple_algorithms",
            "default_algorithms",
            "not_so_random",
            "golden_features",
            "kmeans_features",
            "insert_random_feature",
            "features_selection",
            "hill_climbing_1",
            "hill_climbing_2",
            "boost_on_errors",
            "ensemble",
            "stack",
            "ensemble_stacked"
        ],
        "algorithms": [
            "Decision Tree",
            "Linear",
            "Random Forest",
            "Extra Trees",
            "LightGBM",
            "Xgboost",
            "CatBoost",
            "Neural Network",
            "Nearest Neighbors"
        ],
        "spend": [
            {
                "model_name": "prepare_data",
                "model_type": "prepare_data",
                "fit_level": "prepare_data",
                "train_time": 0.048998117446899414
            },
            {
                "model_name": "1_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "adjust_validation",
                "train_time": 3.7379977703094482
            },
            {
                "model_name": "1_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 5.300005197525024
            },
            {
                "model_name": "2_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 7.272555828094482
            },
            {
                "model_name": "3_DecisionTree",
                "model_type": "Decision Tree",
                "fit_level": "simple_algorithms",
                "train_time": 6.439006567001343
            },
            {
                "model_name": "4_Linear",
                "model_type": "Linear",
                "fit_level": "simple_algorithms",
                "train_time": 13.848978996276855
            },
            {
                "model_name": "5_Default_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "default_algorithms",
                "train_time": 36.883970499038696
            },
            {
                "model_name": "6_Default_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "default_algorithms",
                "train_time": 17.6825909614563
            },
            {
                "model_name": "7_Default_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "default_algorithms",
                "train_time": 13.909002542495728
            },
            {
                "model_name": "8_Default_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "default_algorithms",
                "train_time": 10.132537364959717
            },
            {
                "model_name": "9_Default_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "default_algorithms",
                "train_time": 15.207074642181396
            },
            {
                "model_name": "10_Default_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "default_algorithms",
                "train_time": 15.538573503494263
            },
            {
                "model_name": "11_Default_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "default_algorithms",
                "train_time": 6.289815425872803
            },
            {
                "model_name": "21_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 14.05725383758545
            },
            {
                "model_name": "12_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 17.94452691078186
            },
            {
                "model_name": "30_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 14.979530572891235
            },
            {
                "model_name": "39_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 18.03929829597473
            },
            {
                "model_name": "48_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 13.624340295791626
            },
            {
                "model_name": "57_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 10.920520305633545
            },
            {
                "model_name": "66_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 6.193998336791992
            },
            {
                "model_name": "22_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 16.22275137901306
            },
            {
                "model_name": "13_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 22.910400867462158
            },
            {
                "model_name": "31_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 13.215338230133057
            },
            {
                "model_name": "40_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 13.713291883468628
            },
            {
                "model_name": "49_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 29.933433532714844
            },
            {
                "model_name": "58_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 23.786746501922607
            },
            {
                "model_name": "67_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 16.526001691818237
            },
            {
                "model_name": "23_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 17.997998237609863
            },
            {
                "model_name": "14_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 26.17150044441223
            },
            {
                "model_name": "32_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 30.51999592781067
            },
            {
                "model_name": "41_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 14.749745845794678
            },
            {
                "model_name": "50_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 14.01399850845337
            },
            {
                "model_name": "59_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 12.11803674697876
            },
            {
                "model_name": "68_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 7.962091684341431
            },
            {
                "model_name": "24_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 129.6160581111908
            },
            {
                "model_name": "15_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 25.63452911376953
            },
            {
                "model_name": "33_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 14.260004758834839
            },
            {
                "model_name": "42_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 17.547998905181885
            },
            {
                "model_name": "51_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 16.687997102737427
            },
            {
                "model_name": "60_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 12.86900019645691
            },
            {
                "model_name": "69_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 8.349995374679565
            },
            {
                "model_name": "25_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 17.3799991607666
            },
            {
                "model_name": "16_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 21.69400143623352
            },
            {
                "model_name": "34_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 14.457999229431152
            },
            {
                "model_name": "43_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 16.43000602722168
            },
            {
                "model_name": "52_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 16.53662657737732
            },
            {
                "model_name": "61_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 13.214004039764404
            },
            {
                "model_name": "70_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 9.44900369644165
            },
            {
                "model_name": "26_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 20.434886932373047
            },
            {
                "model_name": "17_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 25.527966499328613
            },
            {
                "model_name": "35_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 16.29399347305298
            },
            {
                "model_name": "44_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 21.938995599746704
            },
            {
                "model_name": "53_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 21.533157110214233
            },
            {
                "model_name": "62_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 16.31286334991455
            },
            {
                "model_name": "71_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 10.30781078338623
            },
            {
                "model_name": "27_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 105.57221937179565
            },
            {
                "model_name": "18_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 23.569622039794922
            },
            {
                "model_name": "36_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 16.40700078010559
            },
            {
                "model_name": "45_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 17.487079620361328
            },
            {
                "model_name": "54_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 16.537999868392944
            },
            {
                "model_name": "63_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 12.81504487991333
            },
            {
                "model_name": "72_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "not_so_random",
                "train_time": 9.546074151992798
            },
            {
                "model_name": "28_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 19.603306770324707
            },
            {
                "model_name": "19_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 22.277775049209595
            },
            {
                "model_name": "37_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 21.863715648651123
            },
            {
                "model_name": "46_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 19.3677499294281
            },
            {
                "model_name": "55_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 18.4996440410614
            },
            {
                "model_name": "64_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 15.070230722427368
            },
            {
                "model_name": "29_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "not_so_random",
                "train_time": 20.162598133087158
            },
            {
                "model_name": "20_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "not_so_random",
                "train_time": 29.097229719161987
            },
            {
                "model_name": "38_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "not_so_random",
                "train_time": 15.68787407875061
            },
            {
                "model_name": "47_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "not_so_random",
                "train_time": 17.427943229675293
            },
            {
                "model_name": "56_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "not_so_random",
                "train_time": 18.59210991859436
            },
            {
                "model_name": "65_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "not_so_random",
                "train_time": 14.194411277770996
            },
            {
                "model_name": "67_NearestNeighbors_GoldenFeatures",
                "model_type": "Nearest Neighbors",
                "fit_level": "golden_features",
                "train_time": 29.76179814338684
            },
            {
                "model_name": "69_NearestNeighbors_GoldenFeatures",
                "model_type": "Nearest Neighbors",
                "fit_level": "golden_features",
                "train_time": 10.994178533554077
            },
            {
                "model_name": "68_NearestNeighbors_GoldenFeatures",
                "model_type": "Nearest Neighbors",
                "fit_level": "golden_features",
                "train_time": 11.080202341079712
            },
            {
                "model_name": "67_NearestNeighbors_KMeansFeatures",
                "model_type": "Nearest Neighbors",
                "fit_level": "kmeans_features",
                "train_time": 11.7930428981781
            },
            {
                "model_name": "69_NearestNeighbors_KMeansFeatures",
                "model_type": "Nearest Neighbors",
                "fit_level": "kmeans_features",
                "train_time": 11.739136457443237
            },
            {
                "model_name": "68_NearestNeighbors_KMeansFeatures",
                "model_type": "Nearest Neighbors",
                "fit_level": "kmeans_features",
                "train_time": 11.983602523803711
            },
            {
                "model_name": "69_NearestNeighbors_RandomFeature",
                "model_type": "Nearest Neighbors",
                "fit_level": "insert_random_feature",
                "train_time": 11.476511478424072
            },
            {
                "model_name": "73_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "hill_climbing_1",
                "train_time": 11.46458625793457
            },
            {
                "model_name": "74_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "hill_climbing_1",
                "train_time": 11.515036821365356
            },
            {
                "model_name": "75_NearestNeighbors",
                "model_type": "Nearest Neighbors",
                "fit_level": "hill_climbing_1",
                "train_time": 11.414271831512451
            },
            {
                "model_name": "76_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 17.066965103149414
            },
            {
                "model_name": "77_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 31.542718410491943
            },
            {
                "model_name": "78_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 17.01300549507141
            },
            {
                "model_name": "79_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 19.4153573513031
            },
            {
                "model_name": "80_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_1",
                "train_time": 20.711658239364624
            },
            {
                "model_name": "81_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 20.183019638061523
            },
            {
                "model_name": "82_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 22.7370502948761
            },
            {
                "model_name": "83_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 22.736401319503784
            },
            {
                "model_name": "84_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 23.25800657272339
            },
            {
                "model_name": "85_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 20.769866228103638
            },
            {
                "model_name": "86_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_1",
                "train_time": 29.4205424785614
            },
            {
                "model_name": "87_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 29.277085304260254
            },
            {
                "model_name": "88_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 24.590017557144165
            },
            {
                "model_name": "89_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 16.21953845024109
            },
            {
                "model_name": "90_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 17.032021522521973
            },
            {
                "model_name": "91_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 16.76694416999817
            },
            {
                "model_name": "92_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 16.9259991645813
            },
            {
                "model_name": "93_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 27.30265974998474
            },
            {
                "model_name": "94_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 25.424853086471558
            },
            {
                "model_name": "95_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 26.439018964767456
            },
            {
                "model_name": "96_Xgboost",
                "model_type": "Xgboost",
                "fit_level": "hill_climbing_1",
                "train_time": 25.177818775177002
            },
            {
                "model_name": "97_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 17.82000160217285
            },
            {
                "model_name": "98_NeuralNetwork",
                "model_type": "Neural Network",
                "fit_level": "hill_climbing_1",
                "train_time": 17.648995399475098
            },
            {
                "model_name": "99_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 22.0855815410614
            },
            {
                "model_name": "100_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 20.90400266647339
            },
            {
                "model_name": "101_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 27.223655223846436
            },
            {
                "model_name": "102_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 26.240498304367065
            },
            {
                "model_name": "103_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 21.880977630615234
            },
            {
                "model_name": "104_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 23.818740129470825
            },
            {
                "model_name": "105_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 26.07817006111145
            },
            {
                "model_name": "106_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 26.649290084838867
            },
            {
                "model_name": "107_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 25.38923454284668
            },
            {
                "model_name": "108_RandomForest",
                "model_type": "Random Forest",
                "fit_level": "hill_climbing_1",
                "train_time": 31.626018524169922
            },
            {
                "model_name": "109_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 23.76767873764038
            },
            {
                "model_name": "110_ExtraTrees",
                "model_type": "Extra Trees",
                "fit_level": "hill_climbing_1",
                "train_time": 22.556456804275513
            },
            {
                "model_name": "111_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 38.97859191894531
            },
            {
                "model_name": "112_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 34.23568296432495
            },
            {
                "model_name": "113_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 27.62307643890381
            },
            {
                "model_name": "114_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 25.402135372161865
            },
            {
                "model_name": "115_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 19.215169429779053
            },
            {
                "model_name": "116_CatBoost",
                "model_type": "CatBoost",
                "fit_level": "hill_climbing_2",
                "train_time": 20.860279083251953
            },
            {
                "model_name": "117_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 23.173999547958374
            },
            {
                "model_name": "118_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 23.38977885246277
            },
            {
                "model_name": "119_LightGBM",
                "model_type": "LightGBM",
                "fit_level": "hill_climbing_2",
                "train_time": 26.82435441017151
            },
            {
                "model_name": "77_CatBoost_BoostOnErrors",
                "model_type": "CatBoost",
                "fit_level": "boost_on_errors",
                "train_time": 39.25381255149841
            },
            {
                "model_name": "Ensemble",
                "model_type": "Ensemble",
                "fit_level": "ensemble",
                "train_time": 68.03927087783813
            },
            {
                "model_name": "77_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 65.61095643043518
            },
            {
                "model_name": "118_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 22.909693002700806
            },
            {
                "model_name": "88_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 28.395549774169922
            },
            {
                "model_name": "92_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 22.795997142791748
            },
            {
                "model_name": "100_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 22.91807723045349
            },
            {
                "model_name": "39_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 41.623669147491455
            },
            {
                "model_name": "116_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 25.949799060821533
            },
            {
                "model_name": "29_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 24.877126693725586
            },
            {
                "model_name": "87_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 27.475022554397583
            },
            {
                "model_name": "90_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 21.824758768081665
            },
            {
                "model_name": "48_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 25.580286741256714
            },
            {
                "model_name": "101_RandomForest_Stacked",
                "model_type": "Random Forest",
                "fit_level": "stack",
                "train_time": 39.68364214897156
            },
            {
                "model_name": "114_CatBoost_Stacked",
                "model_type": "CatBoost",
                "fit_level": "stack",
                "train_time": 42.88939452171326
            },
            {
                "model_name": "117_LightGBM_Stacked",
                "model_type": "LightGBM",
                "fit_level": "stack",
                "train_time": 26.758323431015015
            },
            {
                "model_name": "19_Xgboost_Stacked",
                "model_type": "Xgboost",
                "fit_level": "stack",
                "train_time": 27.073867321014404
            },
            {
                "model_name": "63_NeuralNetwork_Stacked",
                "model_type": "Neural Network",
                "fit_level": "stack",
                "train_time": 21.300002336502075
            },
            {
                "model_name": "104_ExtraTrees_Stacked",
                "model_type": "Extra Trees",
                "fit_level": "stack",
                "train_time": 24.59209656715393
            },
            {
                "model_name": "Ensemble_Stacked",
                "model_type": "Ensemble",
                "fit_level": "ensemble_stacked",
                "train_time": 88.72504115104675
            }
        ],
        "is_hill_climbing": true,
        "is_stacking": true
    },
    "all_params": {
        "adjust_validation": [
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "1_DecisionTree",
                "status": "trained",
                "final_loss": -0.7027027027027027,
                "train_time": 5.022997140884399,
                "data_type": "original",
                "max_time_for_learner": 360.0
            }
        ],
        "simple_algorithms": [
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "1_DecisionTree",
                "status": "trained",
                "final_loss": -0.7443657437218286,
                "train_time": 6.875002145767212,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_depth": 2,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "2_DecisionTree",
                "status": "trained",
                "final_loss": -0.6689694876223374,
                "train_time": 9.491081714630127,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_depth": 2,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "3_DecisionTree",
                "status": "trained",
                "final_loss": -0.6561743341404358,
                "train_time": 8.179007768630981,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Linear",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "4_Linear",
                "status": "trained",
                "final_loss": -0.610381488430269,
                "train_time": 15.483975648880005,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "default_algorithms": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "5_Default_LightGBM",
                "status": "trained",
                "final_loss": -0.8745341614906833,
                "train_time": 38.67496943473816,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "6_Default_Xgboost",
                "status": "trained",
                "final_loss": -0.8537350910232266,
                "train_time": 19.51058053970337,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.1,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "7_Default_CatBoost",
                "status": "trained",
                "final_loss": -0.8854296388542964,
                "train_time": 15.92823576927185,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "8_Default_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8564231738035265,
                "train_time": 11.770536661148071,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 9,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "9_Default_RandomForest",
                "status": "trained",
                "final_loss": -0.8099378881987578,
                "train_time": 17.596659183502197,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 10,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "10_Default_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7650411652944902,
                "train_time": 17.35910940170288,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "n_neighbors": 5,
                    "weights": "uniform",
                    "seed": 11,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "11_Default_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8865336658354115,
                "train_time": 7.880788326263428,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "not_so_random": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 50,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "21_LightGBM",
                "status": "trained",
                "final_loss": -0.864965774735532,
                "train_time": 15.847257614135742,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 7,
                    "min_child_weight": 5,
                    "subsample": 1.0,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "12_Xgboost",
                "status": "trained",
                "final_loss": -0.8446662507797879,
                "train_time": 19.687525510787964,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "30_CatBoost",
                "status": "trained",
                "final_loss": -0.8836341008089608,
                "train_time": 16.92953395843506,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "39_RandomForest",
                "status": "trained",
                "final_loss": -0.8427594779366065,
                "train_time": 19.642297744750977,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "48_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8438871473354231,
                "train_time": 15.265344619750977,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.1,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "57_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8298256163559831,
                "train_time": 12.440521955490112,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "n_neighbors": 7,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "66_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8826114249843064,
                "train_time": 7.589001417160034,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "objective": "binary",
                    "num_leaves": 15,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "22_LightGBM",
                "status": "trained",
                "final_loss": -0.8669154228855722,
                "train_time": 17.871700286865234,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 6,
                    "min_child_weight": 25,
                    "subsample": 0.5,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "13_Xgboost",
                "status": "trained",
                "final_loss": -0.7765890497168031,
                "train_time": 24.94240093231201,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "31_CatBoost",
                "status": "trained",
                "final_loss": -0.8798521256931608,
                "train_time": 15.196400165557861,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "40_RandomForest",
                "status": "trained",
                "final_loss": -0.7372307692307692,
                "train_time": 15.829239845275879,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "49_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7329121194715681,
                "train_time": 32.90804314613342,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "dense_1_size": 64,
                    "dense_2_size": 4,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "58_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8516449410304159,
                "train_time": 26.190818309783936,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "67_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.889167188478397,
                "train_time": 18.051931142807007,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 20,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "23_LightGBM",
                "status": "trained",
                "final_loss": -0.8617482951022939,
                "train_time": 19.900997400283813,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 9,
                    "min_child_weight": 10,
                    "subsample": 0.8,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "14_Xgboost",
                "status": "trained",
                "final_loss": -0.845141065830721,
                "train_time": 28.009499073028564,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "learning_rate": 0.025,
                    "depth": 9,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "32_CatBoost",
                "status": "trained",
                "final_loss": -0.8851644941030415,
                "train_time": 32.42399621009827,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_features": 1.0,
                    "min_samples_split": 30,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "41_RandomForest",
                "status": "trained",
                "final_loss": -0.7387276096355776,
                "train_time": 16.622745037078857,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "criterion": "gini",
                    "max_features": 1.0,
                    "min_samples_split": 30,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "50_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7272727272727273,
                "train_time": 15.807997941970825,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "59_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8447204968944099,
                "train_time": 13.880035400390625,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "68_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.889167188478397,
                "train_time": 9.610090017318726,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "24_LightGBM",
                "status": "trained",
                "final_loss": -0.8690254500310366,
                "train_time": 131.5750823020935,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 4,
                    "min_child_weight": 10,
                    "subsample": 0.6,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "15_Xgboost",
                "status": "trained",
                "final_loss": -0.8258706467661692,
                "train_time": 27.600541591644287,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "learning_rate": 0.1,
                    "depth": 4,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "33_CatBoost",
                "status": "trained",
                "final_loss": -0.8646288209606988,
                "train_time": 16.160014867782593,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "42_RandomForest",
                "status": "trained",
                "final_loss": -0.8112745098039216,
                "train_time": 19.39099884033203,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "51_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7563546187228767,
                "train_time": 18.681977033615112,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "dense_1_size": 16,
                    "dense_2_size": 8,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "60_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8487865588052271,
                "train_time": 14.57701563835144,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "69_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.889167188478397,
                "train_time": 9.973998069763184,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 30,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "25_LightGBM",
                "status": "trained",
                "final_loss": -0.8729076255424675,
                "train_time": 19.289995670318604,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 50,
                    "subsample": 0.5,
                    "colsample_bytree": 0.7,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "16_Xgboost",
                "status": "trained",
                "final_loss": -0.636532507739938,
                "train_time": 23.556997776031494,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "learning_rate": 0.025,
                    "depth": 6,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "34_CatBoost",
                "status": "trained",
                "final_loss": -0.8686994399502178,
                "train_time": 16.258997440338135,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "criterion": "gini",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "43_RandomForest",
                "status": "trained",
                "final_loss": -0.742751388032079,
                "train_time": 18.198000192642212,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "criterion": "gini",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "52_ExtraTrees",
                "status": "trained",
                "final_loss": -0.701995012468828,
                "train_time": 18.370625495910645,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "61_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8525402726146221,
                "train_time": 15.036003112792969,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "n_neighbors": 7,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "70_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8826114249843064,
                "train_time": 11.074992418289185,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "26_LightGBM",
                "status": "trained",
                "final_loss": -0.8771054273237678,
                "train_time": 22.23288869857788,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "17_Xgboost",
                "status": "trained",
                "final_loss": -0.8532338308457711,
                "train_time": 27.390967845916748,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "learning_rate": 0.1,
                    "depth": 5,
                    "rsm": 0.8,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "35_CatBoost",
                "status": "trained",
                "final_loss": -0.88,
                "train_time": 18.169537782669067,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "44_RandomForest",
                "status": "trained",
                "final_loss": -0.8353014294592914,
                "train_time": 23.773994207382202,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "53_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8190830235439901,
                "train_time": 23.742248058319092,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "dense_1_size": 64,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "62_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8204503956177724,
                "train_time": 18.13586449623108,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "71_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.889167188478397,
                "train_time": 11.770090818405151,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "objective": "binary",
                    "num_leaves": 127,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 1.0,
                    "min_data_in_leaf": 50,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "27_LightGBM",
                "status": "trained",
                "final_loss": -0.8693498452012384,
                "train_time": 107.32715702056885,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 7,
                    "min_child_weight": 25,
                    "subsample": 0.6,
                    "colsample_bytree": 1.0,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "18_Xgboost",
                "status": "trained",
                "final_loss": -0.7770700636942676,
                "train_time": 25.262619018554688,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "learning_rate": 0.2,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "36_CatBoost",
                "status": "trained",
                "final_loss": -0.8823529411764706,
                "train_time": 18.268999099731445,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "45_RandomForest",
                "status": "trained",
                "final_loss": -0.8311688311688311,
                "train_time": 19.246081352233887,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "54_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8366336633663365,
                "train_time": 18.208998441696167,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "63_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8574984443061605,
                "train_time": 14.395045280456543,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "n_neighbors": 3,
                    "weights": "uniform",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "72_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.889167188478397,
                "train_time": 11.113148927688599,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.5,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "28_LightGBM",
                "status": "trained",
                "final_loss": -0.8729763387297634,
                "train_time": 21.3123037815094,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "19_Xgboost",
                "status": "trained",
                "final_loss": -0.8617886178861787,
                "train_time": 23.943876028060913,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost",
                "status": "trained",
                "final_loss": -0.8876474239602732,
                "train_time": 23.57325053215027,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "46_RandomForest",
                "status": "trained",
                "final_loss": -0.7439851943244911,
                "train_time": 21.22774839401245,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 3,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "55_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7009803921568627,
                "train_time": 20.615795373916626,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "dense_1_size": 32,
                    "dense_2_size": 4,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "64_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8044619422572179,
                "train_time": 16.638234615325928,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM",
                "status": "trained",
                "final_loss": -0.8815871047737135,
                "train_time": 21.851597547531128,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 10,
                    "subsample": 0.6,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "20_Xgboost",
                "status": "trained",
                "final_loss": -0.8335388409371147,
                "train_time": 30.797229051589966,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "learning_rate": 0.025,
                    "depth": 6,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "38_CatBoost",
                "status": "trained",
                "final_loss": -0.873690696241528,
                "train_time": 17.316874027252197,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "47_RandomForest",
                "status": "trained",
                "final_loss": -0.8053365676167374,
                "train_time": 19.053313970565796,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "56_ExtraTrees",
                "status": "trained",
                "final_loss": -0.7387158296249204,
                "train_time": 23.288429021835327,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "65_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8356579745300182,
                "train_time": 15.922378301620483,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "golden_features": [
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240115_092046\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "67_NearestNeighbors_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.883720930232558,
                "train_time": 31.43270969390869,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240115_092046\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "69_NearestNeighbors_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.883720930232558,
                "train_time": 12.631178379058838,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "golden_features": {
                        "results_path": "output\\mljar\\20240115_092046\\tmp",
                        "ml_task": "binary_classification",
                        "n_jobs": -1
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "68_NearestNeighbors_GoldenFeatures",
                "status": "trained",
                "final_loss": -0.883720930232558,
                "train_time": 12.55320119857788,
                "data_type": "original_golden_features",
                "max_time_for_learner": 72.0
            }
        ],
        "kmeans_features": [
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240115_092046\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "67_NearestNeighbors_KMeansFeatures",
                "status": "trained",
                "final_loss": -0.8666666666666666,
                "train_time": 13.262992143630981,
                "data_type": "original_kmeans_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240115_092046\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "69_NearestNeighbors_KMeansFeatures",
                "status": "trained",
                "final_loss": -0.8715710723192021,
                "train_time": 13.24013638496399,
                "data_type": "original_kmeans_features",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "kmeans_features": {
                        "results_path": "output\\mljar\\20240115_092046\\tmp"
                    }
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "68_NearestNeighbors_KMeansFeatures",
                "status": "trained",
                "final_loss": -0.8612680477087256,
                "train_time": 13.490526676177979,
                "data_type": "original_kmeans_features",
                "max_time_for_learner": 72.0
            }
        ],
        "insert_random_feature": [
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification",
                    "add_random_feature": true
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 3,
                    "weights": "distance",
                    "explain_level": 1
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 1,
                "name": "69_NearestNeighbors_RandomFeature",
                "status": "trained",
                "final_loss": -0.884012539184953,
                "train_time": 12.924511432647705,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "hill_climbing_1": [
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "n_neighbors": 5,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "73_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8888888888888888,
                "train_time": 12.985118627548218,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "n_neighbors": 5,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "74_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8888888888888888,
                "train_time": 12.996036767959595,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": 100000,
                    "max_cols_limit": 100
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Nearest Neighbors",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "n_neighbors": 5,
                    "weights": "distance",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "75_NearestNeighbors",
                "status": "trained",
                "final_loss": -0.8888888888888888,
                "train_time": 12.832290410995483,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "76_CatBoost",
                "status": "trained",
                "final_loss": -0.8754669987546699,
                "train_time": 18.908963203430176,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "77_CatBoost",
                "status": "trained",
                "final_loss": -0.8897196261682243,
                "train_time": 33.226701974868774,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.1,
                    "depth": 5,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "78_CatBoost",
                "status": "trained",
                "final_loss": -0.8734491315136476,
                "train_time": 18.740004301071167,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.1,
                    "depth": 7,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "79_CatBoost",
                "status": "trained",
                "final_loss": -0.8822429906542056,
                "train_time": 21.121454000473022,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "learning_rate": 0.025,
                    "depth": 8,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "80_CatBoost",
                "status": "trained",
                "final_loss": -0.8730650154798762,
                "train_time": 22.40565776824951,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "81_LightGBM",
                "status": "trained",
                "final_loss": -0.8732919254658386,
                "train_time": 21.98001980781555,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "82_LightGBM",
                "status": "trained",
                "final_loss": -0.8741475511469312,
                "train_time": 24.58305025100708,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "83_LightGBM",
                "status": "trained",
                "final_loss": -0.8645640074211504,
                "train_time": 24.618400812149048,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "84_LightGBM",
                "status": "trained",
                "final_loss": -0.8759305210918114,
                "train_time": 25.217008113861084,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "85_LightGBM",
                "status": "trained",
                "final_loss": -0.8645962732919255,
                "train_time": 22.767866611480713,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "86_LightGBM",
                "status": "trained",
                "final_loss": -0.8743781094527363,
                "train_time": 31.158541679382324,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "87_Xgboost",
                "status": "trained",
                "final_loss": -0.8710280373831776,
                "train_time": 30.958082675933838,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "88_Xgboost",
                "status": "trained",
                "final_loss": -0.8711885500933416,
                "train_time": 26.268152475357056,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 8,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "89_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8366336633663365,
                "train_time": 17.809540033340454,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "90_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8631178707224334,
                "train_time": 18.657972812652588,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 8,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "91_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8536133415688697,
                "train_time": 18.384934902191162,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "92_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8669108669108669,
                "train_time": 18.60020160675049,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "93_Xgboost",
                "status": "trained",
                "final_loss": -0.8514357053682896,
                "train_time": 28.973634719848633,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "94_Xgboost",
                "status": "trained",
                "final_loss": -0.8427594779366065,
                "train_time": 27.238851308822632,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "95_Xgboost",
                "status": "trained",
                "final_loss": -0.842367601246106,
                "train_time": 28.09402108192444,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "96_Xgboost",
                "status": "trained",
                "final_loss": -0.8460575719649562,
                "train_time": 26.927760124206543,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 8,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "97_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8377358490566037,
                "train_time": 19.59500217437744,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "98_NeuralNetwork",
                "status": "trained",
                "final_loss": -0.8482972136222909,
                "train_time": 19.312140941619873,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "99_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8359326263256395,
                "train_time": 23.810518503189087,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "100_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8447742733457019,
                "train_time": 22.58104634284973,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "101_RandomForest",
                "status": "trained",
                "final_loss": -0.840471756672874,
                "train_time": 28.93765926361084,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "102_RandomForest",
                "status": "trained",
                "final_loss": -0.8397515527950311,
                "train_time": 28.00243854522705,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "103_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8329177057356609,
                "train_time": 23.571977138519287,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "104_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8432229856339788,
                "train_time": 25.542736530303955,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "105_RandomForest",
                "status": "trained",
                "final_loss": -0.8343634116192831,
                "train_time": 27.794168710708618,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "106_RandomForest",
                "status": "trained",
                "final_loss": -0.8291770573566085,
                "train_time": 28.382290363311768,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "107_RandomForest",
                "status": "trained",
                "final_loss": -0.8323057953144266,
                "train_time": 29.302820682525635,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "108_RandomForest",
                "status": "trained",
                "final_loss": -0.8402734617775016,
                "train_time": 33.32901930809021,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "109_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8220551378446117,
                "train_time": 25.432676315307617,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "110_ExtraTrees",
                "status": "trained",
                "final_loss": -0.8254164096236891,
                "train_time": 24.329456329345703,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "gini",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "111_DecisionTree",
                "status": "skipped",
                "final_loss": -0.8254164096236891,
                "train_time": 24.329456329345703,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "hill_climbing_2": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.05,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "111_CatBoost",
                "status": "trained",
                "final_loss": -0.8854296388542964,
                "train_time": 40.789597511291504,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.2,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "112_CatBoost",
                "status": "trained",
                "final_loss": -0.8877805486284288,
                "train_time": 35.981674671173096,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.05,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "113_CatBoost",
                "status": "trained",
                "final_loss": -0.8853068815871048,
                "train_time": 29.33860421180725,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.2,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "114_CatBoost",
                "status": "trained",
                "final_loss": -0.8881948782011242,
                "train_time": 27.074129819869995,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.05,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "115_CatBoost",
                "status": "trained",
                "final_loss": -0.8711276332094176,
                "train_time": 20.96916389465332,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "116_CatBoost",
                "status": "trained",
                "final_loss": -0.8883312421580929,
                "train_time": 22.561278104782104,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "117_LightGBM",
                "status": "trained",
                "final_loss": -0.8785046728971964,
                "train_time": 24.863999366760254,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "118_LightGBM",
                "status": "trained",
                "final_loss": -0.8819875776397516,
                "train_time": 25.11577796936035,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "119_LightGBM",
                "status": "trained",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "120_LightGBM",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "121_LightGBM",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 8,
                    "min_child_weight": 5,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "122_Xgboost",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 8,
                    "min_child_weight": 5,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "123_Xgboost",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 32,
                    "learning_rate": 0.01,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "124_NeuralNetwork",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 32,
                    "learning_rate": 0.08,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "125_NeuralNetwork",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "126_NeuralNetwork",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 8,
                    "min_child_weight": 5,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "127_Xgboost",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "128_ExtraTrees",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "129_ExtraTrees",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "130_ExtraTrees",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "131_ExtraTrees",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "132_RandomForest",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "133_RandomForest",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "134_RandomForest",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "135_RandomForest",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            },
            {
                "additional": {
                    "trees_in_step": 1,
                    "train_cant_improve_limit": 0,
                    "max_steps": 1,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Decision Tree",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "gini",
                    "max_depth": 4,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "136_DecisionTree",
                "status": "skipped",
                "final_loss": -0.8749229821318546,
                "train_time": 28.54135513305664,
                "data_type": "original",
                "max_time_for_learner": 72.0
            }
        ],
        "boost_on_errors": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5,
                    "sample_weight_path": "output\\mljar\\20240115_092046\\tmp\\77_CatBoost_sample_weight.data"
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "77_CatBoost_BoostOnErrors",
                "status": "trained",
                "final_loss": -0.8884735202492211,
                "train_time": 40.95481467247009,
                "data_type": "boost_on_error",
                "max_time_for_learner": 72.0,
                "injected_sample_weight": true
            }
        ],
        "ensemble": [
            {
                "model_type": "ensemble",
                "is_stacked": false,
                "name": "Ensemble",
                "status": "trained",
                "final_loss": -0.9064837905236908,
                "train_time": 68.03927087783813
            }
        ],
        "stack": [
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "77_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.9060360920970753,
                "train_time": 67.31695818901062,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.5,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "118_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9084158415841584,
                "train_time": 24.630693674087524,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "88_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9000620732464308,
                "train_time": 30.130525588989258,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "92_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8890236506973922,
                "train_time": 24.407536029815674,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "100_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9070492825951341,
                "train_time": 24.664052963256836,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "39_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.908411214953271,
                "train_time": 43.325695276260376,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.2,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "116_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.9069331667707683,
                "train_time": 27.770785808563232,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "29_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9018633540372669,
                "train_time": 26.57512664794922,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "87_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9018633540372669,
                "train_time": 29.192023992538452,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "90_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8941469489414695,
                "train_time": 23.417757511138916,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "48_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.904228855721393,
                "train_time": 27.26128125190735,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "101_RandomForest_Stacked",
                "status": "trained",
                "final_loss": -0.9077306733167082,
                "train_time": 41.39664030075073,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.2,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "114_CatBoost_Stacked",
                "status": "trained",
                "final_loss": -0.9126092384519351,
                "train_time": 44.60839009284973,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.2,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "117_LightGBM_Stacked",
                "status": "trained",
                "final_loss": -0.9049098819142324,
                "train_time": 28.49932360649109,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 8,
                    "min_child_weight": 1,
                    "subsample": 0.6,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "19_Xgboost_Stacked",
                "status": "trained",
                "final_loss": -0.9025450031036623,
                "train_time": 28.758864879608154,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "63_NeuralNetwork_Stacked",
                "status": "trained",
                "final_loss": -0.8930971288943189,
                "train_time": 22.835002660751343,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "104_ExtraTrees_Stacked",
                "status": "trained",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "108_RandomForest_Stacked",
                "status": "error",
                "final_loss": null,
                "train_time": null,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.2,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "112_CatBoost_Stacked",
                "status": "error",
                "final_loss": null,
                "train_time": null,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "26_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.075,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "6_Default_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 16,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "8_Default_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "54_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "102_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.1,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "37_CatBoost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.8,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "84_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "17_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "dense_1_size": 32,
                    "dense_2_size": 8,
                    "learning_rate": 0.05,
                    "seed": 8,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "91_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 50,
                    "max_depth": 7,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "99_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "44_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.05,
                    "depth": 9,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "111_CatBoost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.1,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.8,
                    "min_data_in_leaf": 15,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "119_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "93_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "61_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "103_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "105_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "learning_rate": 0.1,
                    "depth": 6,
                    "rsm": 1,
                    "loss_function": "Logloss",
                    "seed": 7,
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "7_Default_CatBoost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 63,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "5_Default_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "objective": "binary:logistic",
                    "eta": 0.15,
                    "max_depth": 5,
                    "min_child_weight": 5,
                    "subsample": 0.7,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "96_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 44,
                    "dense_1_size": 64,
                    "dense_2_size": 4,
                    "learning_rate": 0.05,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "58_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "110_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.7,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "107_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 50,
                    "learning_rate": 0.05,
                    "depth": 8,
                    "rsm": 1.0,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "113_CatBoost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.05,
                    "feature_fraction": 0.9,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "seed": 5,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "86_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "objective": "binary:logistic",
                    "eta": 0.05,
                    "max_depth": 9,
                    "min_child_weight": 10,
                    "subsample": 0.8,
                    "colsample_bytree": 0.6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "14_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "dense_1_size": 16,
                    "dense_2_size": 8,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "60_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "109_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 49,
                    "criterion": "entropy",
                    "max_features": 0.8,
                    "min_samples_split": 40,
                    "max_depth": 6,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "45_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "CatBoost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "learning_rate": 0.025,
                    "depth": 9,
                    "rsm": 0.9,
                    "loss_function": "Logloss",
                    "eval_metric": "F1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "32_CatBoost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 95,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "82_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 43,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 7,
                    "min_child_weight": 5,
                    "subsample": 1.0,
                    "colsample_bytree": 0.5,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "12_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 47,
                    "dense_1_size": 16,
                    "dense_2_size": 32,
                    "learning_rate": 0.08,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "98_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 0.9,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "53_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 48,
                    "criterion": "entropy",
                    "max_features": 1.0,
                    "min_samples_split": 20,
                    "max_depth": 5,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "106_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "LightGBM",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 51,
                    "objective": "binary",
                    "num_leaves": 31,
                    "learning_rate": 0.2,
                    "feature_fraction": 1.0,
                    "bagging_fraction": 0.9,
                    "min_data_in_leaf": 10,
                    "metric": "custom",
                    "custom_eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "81_LightGBM_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rounds": 10000,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Xgboost",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "objective": "binary:logistic",
                    "eta": 0.1,
                    "max_depth": 6,
                    "min_child_weight": 1,
                    "subsample": 1.0,
                    "colsample_bytree": 1.0,
                    "seed": 6,
                    "eval_metric": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "94_Xgboost_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {
                        "feature_1": [
                            "scale_normal"
                        ],
                        "feature_2": [
                            "scale_normal"
                        ],
                        "feature_3": [
                            "scale_normal"
                        ],
                        "feature_4": [
                            "scale_normal"
                        ],
                        "feature_5": [
                            "scale_normal"
                        ],
                        "feature_6": [
                            "scale_normal"
                        ],
                        "feature_7": [
                            "scale_normal"
                        ],
                        "feature_8": [
                            "scale_normal"
                        ],
                        "feature_9": [
                            "scale_normal"
                        ],
                        "feature_10": [
                            "scale_normal"
                        ],
                        "feature_11": [
                            "scale_normal"
                        ],
                        "feature_12": [
                            "scale_normal"
                        ],
                        "feature_13": [
                            "scale_normal"
                        ],
                        "feature_14": [
                            "scale_normal"
                        ],
                        "feature_15": [
                            "scale_normal"
                        ],
                        "feature_16": [
                            "scale_normal"
                        ],
                        "feature_17": [
                            "scale_normal"
                        ],
                        "feature_18": [
                            "scale_normal"
                        ],
                        "feature_19": [
                            "scale_normal"
                        ],
                        "feature_20": [
                            "scale_normal"
                        ]
                    },
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Neural Network",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 45,
                    "dense_1_size": 16,
                    "dense_2_size": 16,
                    "learning_rate": 0.01,
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "59_NeuralNetwork_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Extra Trees",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "criterion": "gini",
                    "max_features": 0.9,
                    "min_samples_split": 30,
                    "max_depth": 4,
                    "seed": 10,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "10_Default_ExtraTrees_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            },
            {
                "additional": {
                    "trees_in_step": 100,
                    "train_cant_improve_limit": 1,
                    "min_steps": 1,
                    "max_steps": 50,
                    "early_stopping_rounds": 50,
                    "max_rows_limit": null,
                    "max_cols_limit": null
                },
                "preprocessing": {
                    "columns_preprocessing": {},
                    "target_preprocessing": [
                        "na_exclude",
                        "categorical_to_int"
                    ],
                    "ml_task": "binary_classification"
                },
                "validation_strategy": {
                    "validation_type": "kfold",
                    "shuffle": true,
                    "stratify": true,
                    "X_path": "output\\mljar\\20240115_092046\\tmp\\X_stacked.data",
                    "y_path": "output\\mljar\\20240115_092046\\tmp\\y.data",
                    "results_path": "output\\mljar\\20240115_092046\\tmp",
                    "k_folds": 5
                },
                "learner": {
                    "model_type": "Random Forest",
                    "ml_task": "binary_classification",
                    "n_jobs": -1,
                    "seed": 46,
                    "criterion": "gini",
                    "max_features": 0.8,
                    "min_samples_split": 50,
                    "max_depth": 4,
                    "eval_metric_name": "f1",
                    "explain_level": 0
                },
                "automl_random_state": 42,
                "ml_task": "binary_classification",
                "explain_level": 0,
                "name": "42_RandomForest_Stacked",
                "status": "skipped",
                "final_loss": -0.9071651090342678,
                "train_time": 26.355061292648315,
                "data_type": "original_stacked",
                "max_time_for_learner": 72.0,
                "is_stacked": true
            }
        ],
        "ensemble_stacked": [
            {
                "model_type": "ensemble",
                "is_stacked": true,
                "name": "Ensemble_Stacked",
                "status": "trained",
                "final_loss": -0.9143214509068167,
                "train_time": 88.72504115104675
            }
        ]
    },
    "adjust_validation": false
}